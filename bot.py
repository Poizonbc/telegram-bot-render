import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from aiogram.filters import Command, CommandObject

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ====
TOKEN = "8165411625:AAE7anqzTtCAr99OVQfxX-ytYYbHbVUCqOk"  # ‚Üê –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
ADMIN_ID = 7887944708
ADMIN_USERNAME = "poizonbuyers_admin"

# ==== –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ====
yuan_rate = 12
price_per_kg = 600

# ==== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ====
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# ==== –ö–Ω–æ–ø–∫–∞ "–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É" ====
def get_admin_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω—É üí¨", url=f"https://t.me/{ADMIN_USERNAME}")]
        ]
    )

# ==== –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–º–∏—Å—Å–∏–∏ ====
def get_commission_percent(price_rub: float) -> float:
    if price_rub >= 100_000:
        return 5
    elif price_rub >= 75_000:
        return 6
    elif price_rub >= 50_000:
        return 7
    elif price_rub >= 25_000:
        return 8
    elif price_rub >= 20_000:
        return 9
    elif price_rub >= 15_000:
        return 10
    elif price_rub >= 10_000:
        return 13
    else:
        return 15  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# ==== –ö–æ–º–∞–Ω–¥–∞ /start ====
@dp.message(Command("start"))
async def start_handler(message: Message):
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ üòá\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ:\n<code>–¶–ï–ù–ê –í–ï–°</code>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <code>100 2.5</code>"
    )
    await message.answer(text, reply_markup=get_admin_keyboard())

# ==== –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞ –∫–≥ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞) ====
@dp.message(Command("set_yuan"))
async def set_yuan(message: Message, command: CommandObject):
    if message.from_user.id != ADMIN_ID:
        return
    try:
        global yuan_rate
        yuan_rate = float(command.args)
        await message.answer(f"‚úÖ –ö—É—Ä—Å —é–∞–Ω—è –æ–±–Ω–æ–≤–ª–µ–Ω: {yuan_rate} ‚ÇΩ")
    except:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /set_yuan 12.3")

@dp.message(Command("set_kg"))
async def set_kg(message: Message, command: CommandObject):
    if message.from_user.id != ADMIN_ID:
        return
    try:
        global price_per_kg
        price_per_kg = float(command.args)
        await message.answer(f"‚úÖ –¶–µ–Ω–∞ –∑–∞ 1 –∫–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {price_per_kg} ‚ÇΩ")
    except:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /set_kg 600")

# ==== –†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ ====
@dp.message()
async def calculate_handler(message: Message):
    try:
        parts = message.text.strip().split()
        if len(parts) != 2:
            raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")

        price = float(parts[0])
        weight = float(parts[1])

        price_rub = price * yuan_rate
        commission_percent = get_commission_percent(price_rub)
        total = price_rub * (1 + commission_percent / 100) + (weight * price_per_kg)

        result = (
            f"üì¶ –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞:\n\n"
            f"–¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞: {price} ¬•\n"
            f"–í–µ—Å: {weight} –∫–≥\n"
            f"–ö—É—Ä—Å —é–∞–Ω—è: {yuan_rate} ‚ÇΩ\n"
            f"–ö–æ–º–∏—Å—Å–∏—è: {commission_percent}%\n"
            f"–î–æ—Å—Ç–∞–≤–∫–∞: {price_per_kg} ‚ÇΩ/–∫–≥\n\n"
            f"<b>–ò—Ç–æ–≥–æ: {round(total, 2)} ‚ÇΩ</b>"
        )
        await message.answer(result, reply_markup=get_admin_keyboard())
    except Exception:
        await message.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π —Ñ–æ—Ä–º–∞—Ç: <code>—Ü–µ–Ω–∞ –≤–µ—Å</code>\n–ü—Ä–∏–º–µ—Ä: <code>200 1.5</code>")

# ==== –ó–∞–ø—É—Å–∫ ====
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
